image: barichello/godot-ci:latest

# Cache imported assets between runs
cache:
  key: import-assets
  paths:
    - .import/

stages:
  - export
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  EXPORT_NAME: cudovisna-avantura

windows_dev:
  stage: export
  script:
    - mkdir -v -p build/windows_dev
    - cd godot_project
    - godot -v --export-debug "Windows Desktop Dev" ../build/windows_dev/$EXPORT_NAME.exe
    - godot -s ./CopyAssetFolders.gd "--build-path build/windows_dev"
    - test -e ../build/windows_dev/$EXPORT_NAME.exe
    - test -e ../build/windows_dev/default_options.cfg
    - test -e ../build/windows_dev/default_controls.json
    - test -e ../build/windows_dev/default_context.json
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/windows_dev
  only:
      - master

windows:
  stage: export
  script:
    - mkdir -v -p build/windows
    - cd godot_project
    - godot -v --export-debug "Windows Desktop" ../build/windows/$EXPORT_NAME.exe
    - test -e ../build/windows/$EXPORT_NAME.exe
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/windows
  only:
      - master

# Android Debug Job. It will use the generated debug.keystore. 
android_debug:
  stage: export
  script:
    - mkdir -v -p build/android
    - cd godot_project
    - godot -v --export-debug "Android Debug" ../build/android/$EXPORT_NAME-debug.apk
    - test -e ../build/android/$EXPORT_NAME-debug.apk
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/android
  only:
    - master

# Android Release Job. You will need to include keystore and password in the GitLab variable settings: 
# 1. Take your generated keystore and convert it to base64: base64 release.keystore -w 0
# 2. Go to Gitlab Project > Settings > CI/CD > Variables and copy the base64 keystore value in a new variable SECRET_RELEASE_KEYSTORE_BASE64 as type file
# 3. Create a second variable SECRET_RELEASE_KEYSTORE_USER as type variable with the alias of your keystore as value.
# 4. Create a third variable SECRET_RELEASE_KEYSTORE_PASSWORD as type variable with the password of your keystore as value.
android:
  stage: export
  rules:
    - if: $SECRET_RELEASE_KEYSTORE_BASE64
    - if: $SECRET_RELEASE_KEYSTORE_USER
    - if: $SECRET_RELEASE_KEYSTORE_PASSWORD
    - if: '$CI_COMMIT_BRANCH == "master"'
  script:
    - cat $SECRET_RELEASE_KEYSTORE_BASE64 | base64 --decode > /root/release.keystore
    - mkdir -v -p build/android
    - cd godot_project
    - sed 's@keystore/release=".*"@keystore/release="'/root/release.keystore'"@g' -i export_presets.cfg
    - sed 's@keystore/release_user=".*"@keystore/release_user="'$SECRET_RELEASE_KEYSTORE_USER'"@g' -i export_presets.cfg
    - sed 's@keystore/release_password=".*"@keystore/release_password="'$SECRET_RELEASE_KEYSTORE_PASSWORD'"@g' -i export_presets.cfg
    - godot -v --export "Android Release" ../build/android/$EXPORT_NAME.apk
    - test -e ../build/android/$EXPORT_NAME.apk
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/android

web:
  stage: export
  script:
    - mkdir -v -p build/web
    - cd godot_project
    - godot -v --export-debug "HTML5" ../build/web/index.html
    - test -e ../build/web/index.html
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/web
  only:
      - master

# GitLab Pages Deploy
pages:
  stage: deploy
  dependencies:
    - web
  script:
    - git fetch
    - git checkout pages
    - rm -f *.md
    - mv build/web/** ./public
  artifacts:
    paths:
      - public
  only:
    - master
